Что делать:
1) Библа предсказывающего анализатора должна принимать в параметрах:
- лексический анализатор, который будет как раз доставать по токену с помощью nextToken()
- таблицу, с которой нужно работать данному анализатору

2) Генератор
Принимает на вход:
- название файла, где лежит грамматика (любая, но, главное, в том же формате, как и в индивидуальном варике) 
- название файла, куда поместить сгенерированную таблицу
- (необязательно, можно и хардкодом, так как таблица для языка грамматик меняться не будет) название файла, где лежит табла для библы предск. анализатора (2 параметр для предск. анализатора)

Возвращает:
- Кладет таблу в соотв. файл, переданный на входе

в предск. анализатора нужно передавать:
- лексический анализатор с токенами для языка грамматик 
- место, где лежит таблица, построенная для языка грамматик

3) Калькулятор
Принимает на вход:
- файл, где лежит арифм. выражение
- (необязательно, можно и хардкодом, так как таблица для арифм. выражений генерится один раз генератором) название файла, где лежит табла для библы предск. анализатора (2 параметр для предск. анализатора)

Возвращает:
- Значение выражения

в предск. анализатор нужно передавать:
- лексический анализатор с токенами для арифм. выражений
- место, где лежит таблица, сгенерированная генератором при передаче в него грамматики из индивидуального варианта
